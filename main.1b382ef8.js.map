{"version":3,"sources":["scripts/main.js"],"names":["inputs","document","querySelectorAll","inputsArray","forEach","item","label","createElement","itemName","name","fieldName","split","map","letter","index","charCodeAt","toUpperCase","join","className","htmlFor","id","textContent","before","placeholder","slice"],"mappings":";AAAA,aAKA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAHA,IAAMA,EAASC,SAASC,iBAAiB,SACnCC,EAAkBH,EAAAA,GAExBG,EAAYC,QAAQ,SAAAC,GACZC,IAAAA,EAAQL,SAASM,cAAc,SAC/BC,EAAWH,EAAKI,KAEhBC,EAAYF,EAASG,MAAM,IAAIC,IAAI,SAACC,EAAQC,GAC5CN,OAAAA,EAASO,WAAWD,KAClBN,EAASQ,cAAcD,WAAWD,GAC/B,IAAMD,EAGRA,IACNI,KAAK,IAERX,EAAMY,UAAY,cAClBZ,EAAMa,QAAUd,EAAKe,GACrBd,EAAMe,YAAcX,EAEpBL,EAAKiB,OAAOhB,GAEZD,EAAKkB,YAAcb,EAAU,GAAGM,cAAgBN,EAAUc,MAAM","file":"main.1b382ef8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('input');\nconst inputsArray = [...inputs];\n\ninputsArray.forEach(item => {\n  const label = document.createElement('label');\n  const itemName = item.name;\n\n  const fieldName = itemName.split('').map((letter, index) => {\n    if (itemName.charCodeAt(index)\n      === itemName.toUpperCase().charCodeAt(index)) {\n      return ' ' + letter;\n    }\n\n    return letter;\n  }).join('');\n\n  label.className = 'field-label';\n  label.htmlFor = item.id;\n  label.textContent = fieldName;\n\n  item.before(label);\n\n  item.placeholder = fieldName[0].toUpperCase() + fieldName.slice(1);\n});\n"]}